# Generated by Django 2.2.8 on 2020-01-12 15:54

import commons.models
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('projects', '0002_delete_dataprovider'),
        ('contenttypes', '0002_remove_content_type_name'),
    ]

    operations = [
        migrations.CreateModel(
            name='Algorithm',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=128, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Model',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=256)),
                ('description', models.TextField(blank=True, max_length=10000)),
                ('created', models.DateTimeField()),
                ('updated', models.DateTimeField(verbose_name='last_updated')),
            ],
            options={
                'abstract': False,
            },
            bases=(commons.models.TaskShortcutsMixIn, models.Model),
        ),
        migrations.CreateModel(
            name='ModelFileFormat',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fileExtension', models.CharField(max_length=8, unique=True)),
                ('description', models.TextField(blank=True, max_length=10000)),
            ],
        ),
        migrations.CreateModel(
            name='ModelParameters',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('algorithm', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='qsar.Algorithm')),
                ('polymorphic_ctype', models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='polymorphic_qsar.modelparameters_set+', to='contenttypes.ContentType')),
            ],
            options={
                'abstract': False,
                'base_manager_name': 'objects',
            },
        ),
        migrations.CreateModel(
            name='ModelPerformanceMetric',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=128, unique=True)),
                ('description', models.TextField(blank=True, max_length=10000)),
            ],
        ),
        migrations.CreateModel(
            name='TrainingStrategy',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=128, unique=True)),
                ('supportedAlgorithms', models.ManyToManyField(related_name='trainingStrategies', to='qsar.Algorithm')),
                ('supportedMetrics', models.ManyToManyField(related_name='metrics', to='qsar.ModelPerformanceMetric')),
            ],
        ),
        migrations.CreateModel(
            name='BasicTrainingStrategy',
            fields=[
                ('trainingstrategy_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='qsar.TrainingStrategy')),
                ('cvFolds', models.IntegerField()),
                ('validSetSize', models.FloatField()),
            ],
            options={
                'abstract': False,
            },
            bases=('qsar.trainingstrategy',),
        ),
        migrations.CreateModel(
            name='RandomForestParams',
            fields=[
                ('modelparameters_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='qsar.ModelParameters')),
                ('nTrees', models.IntegerField()),
            ],
            options={
                'abstract': False,
                'base_manager_name': 'objects',
            },
            bases=('qsar.modelparameters',),
        ),
        migrations.CreateModel(
            name='TrainingStrategyImpl',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('polymorphic_ctype', models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='polymorphic_qsar.trainingstrategyimpl_set+', to='contenttypes.ContentType')),
                ('strategy', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='qsar.TrainingStrategy')),
            ],
            options={
                'abstract': False,
                'base_manager_name': 'objects',
            },
        ),
        migrations.CreateModel(
            name='ModelPerformance',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.FloatField()),
                ('metric', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='qsar.ModelPerformanceMetric')),
                ('model', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='performance', to='qsar.Model')),
                ('polymorphic_ctype', models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='polymorphic_qsar.modelperformance_set+', to='contenttypes.ContentType')),
            ],
            options={
                'abstract': False,
                'base_manager_name': 'objects',
            },
        ),
        migrations.AddField(
            model_name='model',
            name='parameters',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='qsar.ModelParameters'),
        ),
        migrations.AddField(
            model_name='model',
            name='polymorphic_ctype',
            field=models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='polymorphic_qsar.model_set+', to='contenttypes.ContentType'),
        ),
        migrations.AddField(
            model_name='model',
            name='project',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='projects.Project'),
        ),
        migrations.AddField(
            model_name='model',
            name='training',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='qsar.TrainingStrategyImpl'),
        ),
        migrations.AddField(
            model_name='algorithm',
            name='fileFormats',
            field=models.ManyToManyField(to='qsar.ModelFileFormat'),
        ),
        migrations.CreateModel(
            name='ModelPerformanceCV',
            fields=[
                ('modelperformance_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='qsar.ModelPerformance')),
                ('fold', models.IntegerField()),
                ('performance', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='performanceCV', to='qsar.ModelPerformance')),
            ],
            options={
                'abstract': False,
                'base_manager_name': 'objects',
            },
            bases=('qsar.modelperformance',),
        ),
    ]
