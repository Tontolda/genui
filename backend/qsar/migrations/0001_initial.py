# Generated by Django 2.2.8 on 2020-01-17 16:46

import commons.models
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('compounds', '0005_auto_20200116_1615'),
        ('projects', '0002_delete_dataprovider'),
        ('contenttypes', '0002_remove_content_type_name'),
    ]

    operations = [
        migrations.CreateModel(
            name='Algorithm',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=128, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='AlgorithmMode',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=32, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='DescriptorGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=128, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Model',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=256)),
                ('description', models.TextField(blank=True, max_length=10000)),
                ('created', models.DateTimeField()),
                ('updated', models.DateTimeField(verbose_name='last_updated')),
                ('modelFile', models.FileField(blank=True, null=True, upload_to='models/')),
                ('polymorphic_ctype', models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='polymorphic_qsar.model_set+', to='contenttypes.ContentType')),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='projects.Project')),
            ],
            options={
                'abstract': False,
            },
            bases=(commons.models.TaskShortcutsMixIn, models.Model),
        ),
        migrations.CreateModel(
            name='ModelFileFormat',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fileExtension', models.CharField(max_length=32, unique=True)),
                ('description', models.TextField(blank=True, max_length=10000)),
            ],
        ),
        migrations.CreateModel(
            name='ModelParameter',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=128)),
                ('contentType', models.CharField(choices=[('string', 'String'), ('bool', 'Logical'), ('integer', 'Integer'), ('float', 'Float')], default='string', max_length=32)),
                ('algorithm', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='parameters', to='qsar.Algorithm')),
            ],
            options={
                'unique_together': {('name', 'algorithm')},
            },
        ),
        migrations.CreateModel(
            name='ModelParameterValue',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('parameter', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='qsar.ModelParameter')),
                ('polymorphic_ctype', models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='polymorphic_qsar.modelparametervalue_set+', to='contenttypes.ContentType')),
            ],
            options={
                'abstract': False,
                'base_manager_name': 'objects',
            },
        ),
        migrations.CreateModel(
            name='ModelPerformance',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.FloatField()),
            ],
            options={
                'abstract': False,
                'base_manager_name': 'objects',
            },
        ),
        migrations.CreateModel(
            name='ModelPerformanceMetric',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=128, unique=True)),
                ('description', models.TextField(blank=True, max_length=10000)),
            ],
        ),
        migrations.CreateModel(
            name='TrainingStrategy',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('algorithm', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='qsar.Algorithm')),
                ('mode', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='qsar.AlgorithmMode')),
                ('modelInstance', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='trainingStrategies', to='qsar.Model')),
                ('polymorphic_ctype', models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='polymorphic_qsar.trainingstrategy_set+', to='contenttypes.ContentType')),
            ],
            options={
                'abstract': False,
                'base_manager_name': 'objects',
            },
        ),
        migrations.CreateModel(
            name='ValidationStrategy',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('metrics', models.ManyToManyField(to='qsar.ModelPerformanceMetric')),
                ('modelInstance', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='validationStrategies', to='qsar.Model')),
                ('polymorphic_ctype', models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='polymorphic_qsar.validationstrategy_set+', to='contenttypes.ContentType')),
            ],
            options={
                'abstract': False,
                'base_manager_name': 'objects',
            },
        ),
        migrations.CreateModel(
            name='BasicValidationStrategy',
            fields=[
                ('validationstrategy_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='qsar.ValidationStrategy')),
                ('cvFolds', models.IntegerField()),
                ('validSetSize', models.FloatField()),
            ],
            options={
                'abstract': False,
            },
            bases=('qsar.validationstrategy',),
        ),
        migrations.CreateModel(
            name='ModelParameterBool',
            fields=[
                ('modelparametervalue_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='qsar.ModelParameterValue')),
                ('value', models.BooleanField()),
            ],
            options={
                'abstract': False,
                'base_manager_name': 'objects',
            },
            bases=('qsar.modelparametervalue',),
        ),
        migrations.CreateModel(
            name='ModelParameterFloat',
            fields=[
                ('modelparametervalue_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='qsar.ModelParameterValue')),
                ('value', models.FloatField()),
            ],
            options={
                'abstract': False,
                'base_manager_name': 'objects',
            },
            bases=('qsar.modelparametervalue',),
        ),
        migrations.CreateModel(
            name='ModelParameterInt',
            fields=[
                ('modelparametervalue_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='qsar.ModelParameterValue')),
                ('value', models.IntegerField()),
            ],
            options={
                'abstract': False,
                'base_manager_name': 'objects',
            },
            bases=('qsar.modelparametervalue',),
        ),
        migrations.CreateModel(
            name='ModelParameterStr',
            fields=[
                ('modelparametervalue_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='qsar.ModelParameterValue')),
                ('value', models.CharField(max_length=1024)),
            ],
            options={
                'abstract': False,
                'base_manager_name': 'objects',
            },
            bases=('qsar.modelparametervalue',),
        ),
        migrations.CreateModel(
            name='ModelPerformanceCV',
            fields=[
                ('modelperformance_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='qsar.ModelPerformance')),
                ('fold', models.IntegerField()),
            ],
            options={
                'abstract': False,
                'base_manager_name': 'objects',
            },
            bases=('qsar.modelperformance',),
        ),
        migrations.AddField(
            model_name='modelperformance',
            name='metric',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='qsar.ModelPerformanceMetric'),
        ),
        migrations.AddField(
            model_name='modelperformance',
            name='model',
            field=models.ForeignKey(on_delete=commons.models.NON_POLYMORPHIC_CASCADE, related_name='performance', to='qsar.Model'),
        ),
        migrations.AddField(
            model_name='modelperformance',
            name='polymorphic_ctype',
            field=models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='polymorphic_qsar.modelperformance_set+', to='contenttypes.ContentType'),
        ),
        migrations.AddField(
            model_name='modelparametervalue',
            name='strategy',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='parameters', to='qsar.TrainingStrategy'),
        ),
        migrations.AddField(
            model_name='algorithm',
            name='fileFormats',
            field=models.ManyToManyField(to='qsar.ModelFileFormat'),
        ),
        migrations.AddField(
            model_name='algorithm',
            name='validModes',
            field=models.ManyToManyField(to='qsar.AlgorithmMode'),
        ),
        migrations.CreateModel(
            name='QSARTrainingStrategy',
            fields=[
                ('trainingstrategy_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='qsar.TrainingStrategy')),
                ('activityThreshold', models.FloatField(null=True)),
                ('descriptors', models.ManyToManyField(to='qsar.DescriptorGroup')),
            ],
            options={
                'abstract': False,
                'base_manager_name': 'objects',
            },
            bases=('qsar.trainingstrategy',),
        ),
        migrations.CreateModel(
            name='QSARModel',
            fields=[
                ('model_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='qsar.Model')),
                ('molset', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='models', to='compounds.MolSet')),
            ],
            options={
                'abstract': False,
            },
            bases=('qsar.model',),
        ),
        migrations.CreateModel(
            name='ModelActivitySet',
            fields=[
                ('activityset_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='compounds.ActivitySet')),
                ('model', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='predictions', to='qsar.QSARModel')),
            ],
            options={
                'abstract': False,
            },
            bases=('compounds.activityset',),
        ),
    ]
